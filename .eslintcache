[{"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\index.js":"1","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\App.js":"2","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\reportWebVitals.js":"3","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\Redux\\Store.js":"4","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\Redux\\Reducers.js":"5","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\components\\FilterContacts\\FilterContacts.js":"6","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\components\\ContactsList\\ContactsList.js":"7","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\components\\ContactForm\\ContactForm.js":"8","D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\Redux\\Actions.js":"9","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\index.js":"10","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\App.js":"11","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\reportWebVitals.js":"12","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Store.js":"13","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Reducers.js":"14","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Operations.js":"15","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\components\\ContactsList\\ContactsList.js":"16","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\components\\ContactForm\\ContactForm.js":"17","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\components\\FilterContacts\\FilterContacts.js":"18","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Actions.js":"19"},{"size":813,"mtime":1619547005798,"results":"20","hashOfConfig":"21"},{"size":2614,"mtime":1619545978572,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1607555129392,"results":"23","hashOfConfig":"21"},{"size":1825,"mtime":1619547005684,"results":"24","hashOfConfig":"21"},{"size":1789,"mtime":1619547005653,"results":"25","hashOfConfig":"21"},{"size":812,"mtime":1619545884087,"results":"26","hashOfConfig":"21"},{"size":1662,"mtime":1619545830564,"results":"27","hashOfConfig":"21"},{"size":1981,"mtime":1619310430667,"results":"28","hashOfConfig":"21"},{"size":776,"mtime":1619547005611,"results":"29","hashOfConfig":"21"},{"size":834,"mtime":1619635013214,"results":"30","hashOfConfig":"31"},{"size":2739,"mtime":1619635045456,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1607555129392,"results":"33","hashOfConfig":"31"},{"size":1162,"mtime":1619641491815,"results":"34","hashOfConfig":"31"},{"size":1193,"mtime":1619648015464,"results":"35","hashOfConfig":"31"},{"size":690,"mtime":1619648689372,"results":"36","hashOfConfig":"31"},{"size":1662,"mtime":1619720165762,"results":"37","hashOfConfig":"31"},{"size":4052,"mtime":1619719733274,"results":"38","hashOfConfig":"31"},{"size":812,"mtime":1619545884087,"results":"39","hashOfConfig":"31"},{"size":776,"mtime":1619648157399,"results":"40","hashOfConfig":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"k2s9y0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"rvp8dw",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\index.js",[],["84","85"],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\App.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\reportWebVitals.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\Redux\\Store.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\Redux\\Reducers.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\components\\FilterContacts\\FilterContacts.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\components\\ContactsList\\ContactsList.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\components\\ContactForm\\ContactForm.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-06-phonebook\\src\\Redux\\Actions.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\index.js",["86"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/Store';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\App.js",["89"],"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getContacts } from './Redux/Operations';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport FilterContacts from './components/FilterContacts/FilterContacts';\nimport s from './App.module.css';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getContacts()), []);\n  // state = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n\n  // handleAddContact = newContact =>\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [...contacts, newContact],\n  //   }));\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   const { name, phone } = this.state;\n  //   const { onAdd } = this.props;\n  //   const isValidatedForm = this.validateForm();\n  //   if (!isValidatedForm) return;\n  //   onAdd({ id: uuid(), name, phone });\n  //   this.props.onSubmit(this.state);\n  //   this.resetForm();\n  // };\n\n  // handleRemoveContacts = id =>\n  //   this.setState(({ contacts }) => ({\n  //     contacts: contacts.filter(contact => contact.id !== id),\n  //   }));\n\n  // handleFilterChange = filter => this.setState({ filter });\n\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   return contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // };\n\n  // componentDidMount() {\n  //   if (localStorage.getItem('contacts') !== null) {\n  //     this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) });\n  //   }\n  // }\n\n  // componentDidUpdate(prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  // render() {\n  // const { filter } = this.state;\n  // const visibleContacts = this.getVisibleContacts();\n  return (\n    <div className={s.container}>\n      <h2 className={s.title}>Contact form</h2>\n\n      <ContactForm\n      // onAdd={this.handleAddContact}\n      // onCheckUnique={this.handleCheckUniqueName}\n      />\n\n      <h2 className={s.title}>Contact list</h2>\n\n      <FilterContacts\n      // filter={filter} onChange={this.handleFilterChange}\n      />\n\n      <ContactsList\n      // items={}\n      // contacts={visibleContacts}\n      // onRemove={this.handleRemoveContacts}\n      />\n    </div>\n  );\n  // }\n};\n","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\reportWebVitals.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Store.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Reducers.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Operations.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\components\\ContactsList\\ContactsList.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\components\\ContactForm\\ContactForm.js",["90","91"],"import { Component, useState } from 'react';\n\nimport { useDispatch, connect } from 'react-redux';\nimport { addContacts } from '../../Redux/Operations';\n// import { onAdd } from '../../Redux/Actions';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeNameForm = ({ target }) => {\n    // const { name, value } = target;\n    setName(target.value);\n  };\n\n  const handleChangeNumberForm = ({ target }) => {\n    // const { name, value } = target;\n    setNumber(target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(addContacts(name, number));\n    // onSubmit(name, number);\n    setNumber('');\n    setName('');\n    // resetForm();\n  };\n  // const resetForm = () => ({\n  //   ()=>setNumber(''), setName('');\n  // });\n\n  return (\n    <form className={s.form} onSubmit={handleFormSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeNameForm}\n      />\n\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChangeNumberForm}\n      />\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\n// class ContactForm extends Component {\n//   state = INITIAL_STATE;\n\n//   handleChangeForm = ({ target }) => {\n//     const { name, value } = target;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleFormSubmit = event => {\n//     event.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.resetForm();\n//   };\n\n//   resetForm = () => this.setState(INITIAL_STATE);\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form className={s.form} onSubmit={this.handleFormSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//           required\n//           placeholder=\"Enter name\"\n//           value={name}\n//           onChange={this.handleChangeForm}\n//         />\n\n//         <input\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n//           title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n//           required\n//           placeholder=\"Enter phone number\"\n//           value={number}\n//           onChange={this.handleChangeForm}\n//         />\n\n//         <button type=\"submit\">Add contact</button>\n//       </form>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: text => dispatch(onAdd(text)),\n// });\n\nexport default connect()(ContactForm);\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n","D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\components\\FilterContacts\\FilterContacts.js",[],"D:\\Projects\\React-Homework\\goit-react-hw-07-phonebook\\src\\Redux\\Actions.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":17,"nodeType":"98","messageId":"99","endLine":5,"endColumn":26},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":13,"column":44,"nodeType":"104","endLine":13,"endColumn":46,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":19},{"ruleId":"96","severity":1,"message":"107","line":8,"column":7,"nodeType":"98","messageId":"99","endLine":8,"endColumn":20},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'persistor' is defined but never used.","Identifier","unusedVar",["108"],["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'Component' is defined but never used.","'INITIAL_STATE' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [dispatch]",{"range":"113","text":"114"},[473,475],"[dispatch]"]